// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Trains.Server.Data;

#nullable disable

namespace Trains.Server.Migrations
{
    [DbContext(typeof(TrainsDbContext))]
    [Migration("20241110101507_Trains")]
    partial class Trains
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DirectionStation", b =>
                {
                    b.Property<int>("DirectionsId")
                        .HasColumnType("int");

                    b.Property<int>("StationsId")
                        .HasColumnType("int");

                    b.HasKey("DirectionsId", "StationsId");

                    b.HasIndex("StationsId");

                    b.ToTable("DirectionStation");
                });

            modelBuilder.Entity("ScheduleTrain", b =>
                {
                    b.Property<int>("SchedulesId")
                        .HasColumnType("int");

                    b.Property<int>("TrainsId")
                        .HasColumnType("int");

                    b.HasKey("SchedulesId", "TrainsId");

                    b.HasIndex("TrainsId");

                    b.ToTable("ScheduleTrain");
                });

            modelBuilder.Entity("Trains.Server.Data.Models.Direction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EndStationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StartStationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Directions");
                });

            modelBuilder.Entity("Trains.Server.Data.Models.Info", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CurrentStationId")
                        .HasColumnType("int");

                    b.Property<double>("Distance")
                        .HasColumnType("float");

                    b.Property<int>("NextStationId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("TimeToNextStation")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.ToTable("Info");
                });

            modelBuilder.Entity("Trains.Server.Data.Models.Road", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DirectionId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DirectionId");

                    b.ToTable("Roads");
                });

            modelBuilder.Entity("Trains.Server.Data.Models.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StationId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("StopTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("TimeOnStation")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("TimeOutStation")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("StationId");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("Trains.Server.Data.Models.Station", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("Stations");
                });

            modelBuilder.Entity("Trains.Server.Data.Models.StopTime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("RoadId")
                        .HasColumnType("int");

                    b.Property<int>("StationId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("Time")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("RoadId");

                    b.HasIndex("StationId");

                    b.ToTable("StopTime");
                });

            modelBuilder.Entity("Trains.Server.Data.Models.Train", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("RoadId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<string>("TrainDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoadId");

                    b.ToTable("Trains");
                });

            modelBuilder.Entity("DirectionStation", b =>
                {
                    b.HasOne("Trains.Server.Data.Models.Direction", null)
                        .WithMany()
                        .HasForeignKey("DirectionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Trains.Server.Data.Models.Station", null)
                        .WithMany()
                        .HasForeignKey("StationsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ScheduleTrain", b =>
                {
                    b.HasOne("Trains.Server.Data.Models.Schedule", null)
                        .WithMany()
                        .HasForeignKey("SchedulesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Trains.Server.Data.Models.Train", null)
                        .WithMany()
                        .HasForeignKey("TrainsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Trains.Server.Data.Models.Road", b =>
                {
                    b.HasOne("Trains.Server.Data.Models.Direction", "Direction")
                        .WithMany()
                        .HasForeignKey("DirectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Direction");
                });

            modelBuilder.Entity("Trains.Server.Data.Models.Schedule", b =>
                {
                    b.HasOne("Trains.Server.Data.Models.Station", "Station")
                        .WithMany("Schedules")
                        .HasForeignKey("StationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Station");
                });

            modelBuilder.Entity("Trains.Server.Data.Models.StopTime", b =>
                {
                    b.HasOne("Trains.Server.Data.Models.Road", "Road")
                        .WithMany()
                        .HasForeignKey("RoadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Trains.Server.Data.Models.Station", "Station")
                        .WithMany("StopTimes")
                        .HasForeignKey("StationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Road");

                    b.Navigation("Station");
                });

            modelBuilder.Entity("Trains.Server.Data.Models.Train", b =>
                {
                    b.HasOne("Trains.Server.Data.Models.Road", "Road")
                        .WithMany("Trains")
                        .HasForeignKey("RoadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Road");
                });

            modelBuilder.Entity("Trains.Server.Data.Models.Road", b =>
                {
                    b.Navigation("Trains");
                });

            modelBuilder.Entity("Trains.Server.Data.Models.Station", b =>
                {
                    b.Navigation("Schedules");

                    b.Navigation("StopTimes");
                });
#pragma warning restore 612, 618
        }
    }
}
